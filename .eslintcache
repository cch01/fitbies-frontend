[{"/usr/src/app/src/index.tsx":"1","/usr/src/app/src/reportWebVitals.ts":"2","/usr/src/app/src/App.tsx":"3","/usr/src/app/src/hooks/useStores.ts":"4","/usr/src/app/src/hooks/useInitApollo.ts":"5","/usr/src/app/src/pages/landing/components/loadingScreen.tsx":"6","/usr/src/app/src/pages/landing/index.tsx":"7","/usr/src/app/src/pages/meeting/index.tsx":"8","/usr/src/app/src/lib/stores/index.ts":"9","/usr/src/app/src/pages/landing/graphql/joinMeeting.ts":"10","/usr/src/app/src/pages/landing/graphql/signIn.ts":"11","/usr/src/app/src/pages/landing/components/landing.tsx":"12","/usr/src/app/src/graphql/subscriptionTest.js":"13","/usr/src/app/src/graphql/me.js":"14","/usr/src/app/src/lib/stores/authStore.ts":"15","/usr/src/app/src/lib/utils/passwordHashCreator.ts":"16","/usr/src/app/src/components/forms/SingleLineFormField.tsx":"17"},{"size":734,"mtime":1610450359878,"results":"18","hashOfConfig":"19"},{"size":436,"mtime":1610384084507,"results":"20","hashOfConfig":"19"},{"size":2386,"mtime":1610552168215,"results":"21","hashOfConfig":"19"},{"size":124,"mtime":1610448848766,"results":"22","hashOfConfig":"19"},{"size":3174,"mtime":1610552615475,"results":"23","hashOfConfig":"19"},{"size":481,"mtime":1610478595434,"results":"24","hashOfConfig":"19"},{"size":2273,"mtime":1610552849798,"results":"25","hashOfConfig":"19"},{"size":666,"mtime":1610472182480,"results":"26","hashOfConfig":"19"},{"size":158,"mtime":1610448869983,"results":"27","hashOfConfig":"19"},{"size":422,"mtime":1610468107779,"results":"28","hashOfConfig":"19"},{"size":198,"mtime":1610457290591,"results":"29","hashOfConfig":"19"},{"size":4105,"mtime":1610534765206,"results":"30","hashOfConfig":"19"},{"size":84,"mtime":1610521871240,"results":"31","hashOfConfig":"19"},{"size":168,"mtime":1610527389639,"results":"32","hashOfConfig":"19"},{"size":1363,"mtime":1610552710686,"results":"33","hashOfConfig":"19"},{"size":149,"mtime":1610478460908,"results":"34","hashOfConfig":"19"},{"size":1570,"mtime":1610475614417,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"hbb1h3",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/usr/src/app/src/index.tsx",[],["74","75","76","77","78","79"],"/usr/src/app/src/reportWebVitals.ts",[],"/usr/src/app/src/App.tsx",["80","81","82"],"import React, { lazy, Suspense, useEffect } from 'react';\nimport Peer from 'peerjs';\nimport {\n  BrowserRouter as Router, Route, Switch,\n  useLocation, useHistory,\n} from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport { useInitApollo } from 'hooks/useInitApollo';\nimport { observer } from 'mobx-react';\nimport { useStores } from 'hooks/useStores';\nimport LoadingScreen from 'pages/landing/components/loadingScreen';\n\n// const id = (Math.random()*50).toString()\n// console.log('id',id)\n// const peer = new Peer(id, {host:'localhost', path:\"/rooms\", port: 3001 });\n// const conn = peer.connect('another-peers-id');\n// conn.on('open', () => {\n//   conn.send('hi x 2!!, I am '+id);\n// });\n\n// peer.on('connection', (conn) => {\n//   conn.on('data', (data) => {\n//     // Will print 'hi!'\n//     console.log(data);\n//   });\n//   conn.on('open', () => {\n//     conn.send('hello! me is '+id);\n//   });\n// });\n\nconst Landing: React.LazyExoticComponent<React.FC> = lazy(() => import('pages/landing'));\nconst Meeting: React.LazyExoticComponent<React.FC> = lazy(() => import('pages/meeting'));\n\nconst App: React.FC = observer(() => {\n  const { authStore } = useStores();\n  console.log('current Token', authStore.token);\n  const client = useInitApollo(authStore.token, () => {\n    // eslint-disable-next-line no-console\n    console.warn('Clearing cookie...');\n    authStore.logout();\n  }, (token:string) => authStore.setToken(token.replace('Bearer ', '')));\n  useEffect(() => {\n    console.log('token changed');\n  }, [authStore.token]);\n  useEffect(() => {\n    console.log('client instance changed');\n  }, [client]);\n  const history = useHistory();\n  const location = useLocation();\n\n  return (\n    <ApolloProvider client={client}>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        pauseOnHover\n      />\n      <div className=\"App\">\n        <Suspense fallback={<LoadingScreen />}>\n          <Switch>\n            <Route exact path=\"/landing\" component={Landing} />\n            <Route exact path=\"/\" component={Meeting} />\n          </Switch>\n        </Suspense>\n      </div>\n    </ApolloProvider>\n  );\n});\n\nexport default App;\n","/usr/src/app/src/hooks/useStores.ts",[],"/usr/src/app/src/hooks/useInitApollo.ts",[],"/usr/src/app/src/pages/landing/components/loadingScreen.tsx",[],"/usr/src/app/src/pages/landing/index.tsx",["83","84","85","86"],"import {\n  useMutation, useApolloClient, useSubscription, useQuery, useLazyQuery,\n} from '@apollo/client';\nimport { useStores } from 'hooks/useStores';\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useQueryParam, NumberParam, StringParam } from 'use-query-params';\nimport passwordHashCreator from 'lib/utils/passwordHashCreator';\nimport { observer } from 'mobx-react';\nimport subscriptionTest from 'graphql/subscriptionTest';\nimport me from 'graphql/me';\nimport signInMutation from './graphql/signIn';\nimport joinMeetingMutation from './graphql/joinMeeting';\nimport Landing, { JoinMeetingInput, SignInInput } from './components/landing';\n\nconst LandingPage:React.FC = observer(() => {\n  const [redirect, setRedirect] = useQueryParam('redirect', StringParam);\n  const history = useHistory();\n  const { authStore } = useStores();\n  const [runSignInMutation] = useMutation(signInMutation, { fetchPolicy: 'no-cache' });\n  const [runJoinMeetingMutation] = useMutation(joinMeetingMutation);\n  const [runQuery, { called, data: meData }] = useLazyQuery(me);\n  console.log(meData);\n  const client = useApolloClient();\n\n  const {\n    variables, loading, data, error,\n  } = useSubscription(subscriptionTest);\n\n  console.log('data', data);\n\n  useEffect(() => {\n    if (authStore.isLoggedIn) {\n      history.push(redirect ?? '/');\n    }\n  }, [authStore.isLoggedIn]);\n\n  const onSignIn = (signInData: SignInInput): void => {\n    const hashedPassword = passwordHashCreator(signInData.password);\n    runSignInMutation({ variables: { input: { ...signInData, password: hashedPassword } } }).then((result) => {\n      authStore.setToken(result.data.signIn.token);\n      authStore.setViewer(result.data.signIn.user);\n    }).catch((err) => {\n      console.warn(err);\n      console.log('Clearing token');\n      authStore.logout();\n    });\n\n    runQuery();\n  };\n\n  const onJoinMeeting = (joinMeetingData: JoinMeetingInput): void => {\n    runJoinMeetingMutation({ variables: joinMeetingData }).then((result) => {\n      authStore.setToken(result.data.token);\n      authStore.setViewer(result.data.signIn.user);\n    });\n  };\n\n  return <Landing onSignIn={onSignIn} onJoinMeeting={onJoinMeeting} other={runQuery} />;\n});\n\nexport default LandingPage;\n","/usr/src/app/src/pages/meeting/index.tsx",[],"/usr/src/app/src/lib/stores/index.ts",[],"/usr/src/app/src/pages/landing/graphql/joinMeeting.ts",[],"/usr/src/app/src/pages/landing/graphql/signIn.ts",[],"/usr/src/app/src/pages/landing/components/landing.tsx",["87","88","89"],"import * as React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport SingleLineFormField from 'components/forms/SingleLineFormField';\nimport { useForm } from 'react-final-form-hooks';\n\nexport interface SignInInput {\n  email: string;\n  password: string;\n}\n\nexport interface JoinMeetingInput {\n  joinerId: string;\n  meetingId: string;\n}\n\ninterface LandingPageProps {\n  onSignIn(input: SignInInput): any;\n  onJoinMeeting(input: JoinMeetingInput): any;\n  other(): any\n}\nconst Copyright: React.FC = () => (\n  <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n    {'Copyright © '}\n    <Link color=\"inherit\" href=\"https://material-ui.com/\">\n      Your Website\n    </Link>\n    {' '}\n    {new Date().getFullYear()}\n    .\n  </Typography>\n);\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst LandingPage:React.FC<LandingPageProps> = ({ other, onSignIn, onJoinMeeting }) => {\n  const classes = useStyles();\n  const { form: signInForm, handleSubmit: handleSignInSubmit, submitting: signInSubmitting } = useForm({ onSubmit: onSignIn });\n  const { form: joinMeetingForm, handleSubmit: handleJoinMeetingSubmit, submitting: joinMeetingSubmitting } = useForm({ onSubmit: onJoinMeeting });\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSignInSubmit}>\n          <SingleLineFormField\n            form={signInForm}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <SingleLineFormField\n            form={signInForm}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\" onClick={other}>\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                Don't have an account? Sign Up\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nexport default LandingPage;\n","/usr/src/app/src/graphql/subscriptionTest.js",[],"/usr/src/app/src/graphql/me.js",[],"/usr/src/app/src/lib/stores/authStore.ts",[],"/usr/src/app/src/lib/utils/passwordHashCreator.ts",[],"/usr/src/app/src/components/forms/SingleLineFormField.tsx",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":38,"column":3,"nodeType":"104","messageId":"105","endLine":38,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":45,"column":5,"nodeType":"104","messageId":"105","endLine":45,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":48,"column":5,"nodeType":"104","messageId":"105","endLine":48,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":23,"column":3,"nodeType":"104","messageId":"105","endLine":23,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":30,"column":3,"nodeType":"104","messageId":"105","endLine":30,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":44,"column":7,"nodeType":"104","messageId":"105","endLine":44,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":45,"column":7,"nodeType":"104","messageId":"105","endLine":45,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":119,"column":15,"nodeType":"108","endLine":119,"endColumn":62},{"ruleId":"106","severity":1,"message":"109","line":124,"column":15,"nodeType":"108","endLine":124,"endColumn":46},{"ruleId":"110","severity":1,"message":"111","line":125,"column":20,"nodeType":"112"},"lines-around-directive",["113"],"no-spaced-func",["114"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","jsx-a11y/anchor-is-valid","Anchor used as a button. Anchors are primarily expected to navigate. Use the button element instead. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/no-unescaped-entities","`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","JSXText","padding-line-between-statements","func-call-spacing"]