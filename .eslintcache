[{"/usr/src/app/src/index.tsx":"1","/usr/src/app/src/reportWebVitals.ts":"2","/usr/src/app/src/App.tsx":"3","/usr/src/app/src/hooks/useStores.ts":"4","/usr/src/app/src/hooks/useInitApollo.ts":"5","/usr/src/app/src/pages/meeting/index.tsx":"6","/usr/src/app/src/lib/stores/index.ts":"7","/usr/src/app/src/graphql/subscriptionTest.js":"8","/usr/src/app/src/graphql/me.js":"9","/usr/src/app/src/lib/stores/authStore.ts":"10","/usr/src/app/src/lib/utils/passwordHashCreator.ts":"11","/usr/src/app/src/components/forms/SingleLineFormField.tsx":"12","/usr/src/app/src/components/loadingScreen.tsx":"13","/usr/src/app/src/pages/landing/index.tsx":"14","/usr/src/app/src/lib/stores/uiStore.ts":"15","/usr/src/app/src/pages/auth/index.tsx":"16","/usr/src/app/src/pages/auth/graphql/joinMeeting.ts":"17","/usr/src/app/src/pages/auth/graphql/signIn.ts":"18","/usr/src/app/src/pages/auth/components/auth.tsx":"19","/usr/src/app/src/layout/App/index.tsx":"20","/usr/src/app/src/layout/authLayout/index.tsx":"21","/usr/src/app/src/pages/protectedRouter.tsx":"22","/usr/src/app/src/pages/unProtectedRouter.tsx":"23","/usr/src/app/src/layout/app/index.tsx":"24","/usr/src/app/src/pages/joinMeeting/index.tsx":"25","/usr/src/app/src/pages/joinMeeting/components/joinMeeting.tsx":"26","/usr/src/app/src/pages/joinMeeting/graphql/joinMeeting.tsx":"27"},{"size":734,"mtime":1610450359878,"results":"28","hashOfConfig":"29"},{"size":436,"mtime":1610384084507,"results":"30","hashOfConfig":"29"},{"size":2463,"mtime":1611246487019,"results":"31","hashOfConfig":"29"},{"size":124,"mtime":1610448848766,"results":"32","hashOfConfig":"29"},{"size":3174,"mtime":1610552615475,"results":"33","hashOfConfig":"29"},{"size":589,"mtime":1611249240396,"results":"34","hashOfConfig":"29"},{"size":231,"mtime":1611214434748,"results":"35","hashOfConfig":"29"},{"size":84,"mtime":1610521871240,"results":"36","hashOfConfig":"29"},{"size":168,"mtime":1610527389639,"results":"37","hashOfConfig":"29"},{"size":1363,"mtime":1611247939521,"results":"38","hashOfConfig":"29"},{"size":149,"mtime":1610478460908,"results":"39","hashOfConfig":"29"},{"size":1570,"mtime":1610475614417,"results":"40","hashOfConfig":"29"},{"size":481,"mtime":1610957241161,"results":"41","hashOfConfig":"29"},{"size":1273,"mtime":1611254829721,"results":"42","hashOfConfig":"29"},{"size":246,"mtime":1610990430932,"results":"43","hashOfConfig":"29"},{"size":2375,"mtime":1611240159309,"results":"44","hashOfConfig":"29"},{"size":422,"mtime":1610468107779,"results":"45","hashOfConfig":"29"},{"size":236,"mtime":1610965281579,"results":"46","hashOfConfig":"29"},{"size":4416,"mtime":1611254429733,"results":"47","hashOfConfig":"29"},{"size":964,"mtime":1611219595654,"results":"48","hashOfConfig":"29"},{"size":672,"mtime":1611254746266,"results":"49","hashOfConfig":"29"},{"size":1283,"mtime":1611246542337,"results":"50","hashOfConfig":"29"},{"size":1484,"mtime":1611251503135,"results":"51","hashOfConfig":"29"},{"size":1062,"mtime":1611228758445,"results":"52","hashOfConfig":"29"},{"size":1232,"mtime":1611248336314,"results":"53","hashOfConfig":"29"},{"size":1456,"mtime":1611253669156,"results":"54","hashOfConfig":"29"},{"size":269,"mtime":1611241904814,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"hbb1h3",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/usr/src/app/src/index.tsx",[],["117","118","119","120","121","122"],"/usr/src/app/src/reportWebVitals.ts",[],"/usr/src/app/src/App.tsx",["123","124","125"],"import React, { lazy, Suspense, useEffect } from 'react';\nimport Peer from 'peerjs';\nimport {\n  BrowserRouter as Router, Route, Switch,\n  useLocation, useHistory, Redirect,\n} from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport { useInitApollo } from 'hooks/useInitApollo';\nimport { observer } from 'mobx-react';\nimport { useStores } from 'hooks/useStores';\nimport LoadingScreen from 'components/loadingScreen';\nimport AuthLayout from 'layout/authLayout';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { StringParam, useQueryParam } from 'use-query-params';\nimport ProtectedRouter from 'pages/protectedRouter';\nimport UnProtectedRouter from 'pages/unProtectedRouter';\n\nconst Landing: React.LazyExoticComponent<React.FC> = lazy(() => import('pages/landing'));\nconst Auth: React.LazyExoticComponent<React.FC> = lazy(() => import('pages/auth'));\n\nconst App: React.FC = observer(() => {\n  const { authStore } = useStores();\n  const history = useHistory();\n  const location = useLocation();\n  const [redirect, setRedirect] = useQueryParam('redirect', StringParam);\n\n  console.log('current Token', authStore.token);\n  const client = useInitApollo(authStore.token, () => {\n    // eslint-disable-next-line no-console\n    console.warn('Clearing cookie...');\n    authStore.logout();\n  }, (token:string) => authStore.setToken(token.replace('Bearer ', '')));\n  useEffect(() => {\n    console.log('token changed');\n  }, [authStore.token]);\n  useEffect(() => {\n    console.log('client instance changed');\n  }, [client]);\n\n  useEffect(() => {\n    if (authStore.isLoggedIn) {\n      history.push(redirect ?? '/landing');\n    }\n  }, [authStore.isLoggedIn]);\n\n  return (\n    <ApolloProvider client={client}>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        pauseOnHover\n      />\n      <HelmetProvider>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/landing\" component={UnProtectedRouter} />\n            <Route path=\"/login\" component={UnProtectedRouter} />\n            <Route path=\"/\" component={ProtectedRouter} />\n            <Redirect to=\"/landing\" />\n          </Switch>\n        </div>\n      </HelmetProvider>\n    </ApolloProvider>\n  );\n});\n\nexport default App;\n","/usr/src/app/src/hooks/useStores.ts",[],"/usr/src/app/src/hooks/useInitApollo.ts",[],"/usr/src/app/src/pages/meeting/index.tsx",[],"/usr/src/app/src/lib/stores/index.ts",[],"/usr/src/app/src/graphql/subscriptionTest.js",[],"/usr/src/app/src/graphql/me.js",[],"/usr/src/app/src/lib/stores/authStore.ts",[],"/usr/src/app/src/lib/utils/passwordHashCreator.ts",[],"/usr/src/app/src/components/forms/SingleLineFormField.tsx",[],"/usr/src/app/src/components/loadingScreen.tsx",[],"/usr/src/app/src/pages/landing/index.tsx",[],"/usr/src/app/src/lib/stores/uiStore.ts",[],"/usr/src/app/src/pages/auth/index.tsx",["126","127","128","129","130"],"import {\n  useMutation, useApolloClient, useSubscription, useQuery, useLazyQuery,\n} from '@apollo/client';\nimport { useStores } from 'hooks/useStores';\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { NumberParam, StringParam, useQueryParams } from 'use-query-params';\nimport passwordHashCreator from 'lib/utils/passwordHashCreator';\nimport { observer } from 'mobx-react';\nimport subscriptionTest from 'graphql/subscriptionTest';\nimport me from 'graphql/me';\nimport signInMutation from './graphql/signIn';\nimport joinMeetingMutation from './graphql/joinMeeting';\nimport Auth, { JoinMeetingInput, SignInInput } from './components/auth';\n\nconst LandingPage:React.FC = observer(() => {\n  const [{ redirect }, setRedirect] = useQueryParams({ redirect: StringParam });\n  console.log('redirect query', redirect);\n  const history = useHistory();\n  const { authStore } = useStores();\n  const [runSignInMutation] = useMutation(signInMutation, { fetchPolicy: 'no-cache' });\n  const [runJoinMeetingMutation] = useMutation(joinMeetingMutation);\n  const [runQuery, { called, data: meData }] = useLazyQuery(me);\n  console.log(meData);\n  const client = useApolloClient();\n\n  const {\n    variables, loading, data, error,\n  } = useSubscription(subscriptionTest);\n\n  console.log('data', data);\n\n  useEffect(() => { meData && authStore.setViewer(meData.me); }, [meData]);\n\n  useEffect(() => {\n    if (authStore.isLoggedIn) {\n      history.push(decodeURIComponent(redirect as string) ?? '/');\n    }\n  }, [authStore.isLoggedIn]);\n\n  const onSignIn = (signInData: SignInInput): void => {\n    const hashedPassword = passwordHashCreator(signInData.password);\n    runSignInMutation({ variables: { input: { ...signInData, password: hashedPassword } } }).then((result) => {\n      authStore.setToken(result.data.signIn.token);\n      authStore.setViewer(result.data.signIn.user);\n    }).catch((err) => {\n      console.warn(err);\n      console.log('Clearing token');\n      authStore.logout();\n    });\n\n    runQuery();\n  };\n\n  const onJoinMeeting = (joinMeetingData: JoinMeetingInput): void => {\n    runJoinMeetingMutation({ variables: joinMeetingData }).then((result) => {\n      authStore.setToken(result.data.token);\n      authStore.setViewer(result.data.signIn.user);\n    });\n  };\n\n  return <Auth onSignIn={onSignIn} onJoinMeeting={onJoinMeeting} other={runQuery} />;\n});\n\nexport default LandingPage;\n","/usr/src/app/src/pages/auth/graphql/joinMeeting.ts",[],"/usr/src/app/src/pages/auth/graphql/signIn.ts",[],"/usr/src/app/src/pages/auth/components/auth.tsx",["131","132"],"import * as React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport SingleLineFormField from 'components/forms/SingleLineFormField';\nimport { useForm } from 'react-final-form-hooks';\nimport clsx from 'clsx';\nimport { useState } from 'react';\n\nexport interface SignInInput {\n  email: string;\n  password: string;\n}\n\nexport interface JoinMeetingInput {\n  joinerId: string;\n  meetingId: string;\n}\n\ninterface LoginPageProps {\n  onSignIn(input: SignInInput): any;\n  onJoinMeeting(input: JoinMeetingInput): any;\n  other(): any\n}\nconst Copyright: React.FC = () => (\n  <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n    {'Copyright © '}\n    <Link color=\"inherit\" href=\"https://material-ui.com/\">\n      Your Website\n    </Link>\n    {' '}\n    {new Date().getFullYear()}\n    .\n  </Typography>\n);\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nconst Auth:React.FC<LoginPageProps> = ({ other, onSignIn, onJoinMeeting }) => {\n  const classes = useStyles();\n  const [isJoining, setIsJoining] = useState<boolean>(false);\n  const { form: signInForm, handleSubmit: handleSignInSubmit, submitting: signInSubmitting } = useForm({ onSubmit: onSignIn });\n  const { form: joinMeetingForm, handleSubmit: handleJoinMeetingSubmit, submitting: joinMeetingSubmitting } = useForm({ onSubmit: onJoinMeeting });\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className=\"flex-column flex-y-center mt-8\">\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <div className=\"h1 mb-1\">\n          Welcome to ZOOMED\n        </div>\n        <form className={clsx({ hide: isJoining })} noValidate onSubmit={handleSignInSubmit}>\n          <SingleLineFormField\n            form={signInForm}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <SingleLineFormField\n            form={signInForm}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginTop: 20, marginBottom: 20 }}\n          >\n            Sign In\n          </Button>\n        </form>\n        <form className={clsx({ hide: !isJoining })} noValidate onSubmit={handleJoinMeetingSubmit}>\n          <SingleLineFormField\n            form={joinMeetingForm}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Room ID\"\n            name=\"roomId\"\n            autoFocus\n          />\n          <SingleLineFormField\n            form={joinMeetingForm}\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            name=\"passCode\"\n            label=\"Pass Code (if any)\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginTop: 20, marginBottom: 20 }}\n          >\n            Join meeting\n          </Button>\n        </form>\n        <Grid container className=\"hoverShadow transition\">\n          <Grid item xs>\n            <Link href=\"#\" variant=\"body2\" onClick={other}>\n              Forgot password?\n            </Link>\n          </Grid>\n          <Grid item>\n            <Link href=\"#\" variant=\"body2\" onClick={() => setIsJoining((val) => !val)}>\n              Join a meeting\n            </Link>\n          </Grid>\n        </Grid>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nexport default Auth;\n","/usr/src/app/src/layout/App/index.tsx",[],["133","134","135","136","137","138"],"/usr/src/app/src/layout/authLayout/index.tsx",[],"/usr/src/app/src/pages/protectedRouter.tsx",[],"/usr/src/app/src/pages/unProtectedRouter.tsx",[],"/usr/src/app/src/layout/app/index.tsx",["139"],"import React, { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useStores } from 'hooks/useStores';\nimport { observer } from 'mobx-react-lite';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styles from './index.module.scss';\n\nconst Layout:React.FC<{ children: React.ReactNode}> = observer(({ children }) => {\n  const { uiStore: { title }, authStore } = useStores();\n  const history = useHistory();\n  const location = useLocation();\n  // useEffect(() => {\n  console.log(location);\n  if (!authStore.isLoggedIn) {\n    history.push({\n      pathname: '/login',\n      search: location.search === '/' ? '' : `?redirect=${encodeURIComponent(location.pathname + location.search)}`,\n    });\n  }\n  // });\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          { title ? `${title} - ZOOMED` : 'ZOOMED' }\n        </title>\n      </Helmet>\n      <div className={styles.background}>\n        <div className={styles.mainContainer}>\n          {children}\n        </div>\n      </div>\n    </>\n  );\n});\n\nexport default Layout;\n","/usr/src/app/src/pages/joinMeeting/index.tsx",["140"],"import { useMutation } from '@apollo/client';\nimport { useStores } from 'hooks/useStores';\nimport { observer } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { StringParam, useQueryParams } from 'use-query-params';\nimport _ from 'lodash';\nimport JoinMeeting, { JoinRoomInput } from './components/joinMeeting';\nimport joinMeetingGQL from './graphql/joinMeeting';\n\nconst JoinMeetingPage: React.FC = observer(() => {\n  const { authStore } = useStores();\n  const viewer = authStore.currentViewer;\n  const history = useHistory();\n  const [queries] = useQueryParams({ rid: StringParam, pass: StringParam });\n  const [runJoinMeetingMutation, { loading }] = useMutation(joinMeetingGQL);\n\n  const onJoinMeeting = ({ meetingId, passCode }: JoinRoomInput) => {\n    runJoinMeetingMutation({ variables: { joinMeetingInput: { meetingId, passCode, joinerId: viewer._id } } }).then(({ data }) => {\n      console.log('join response', data);\n      if (!_.isEmpty(data.joinMeeting.roomId)) {\n        history.push('/meeting', { roomId: data.joinMeeting.roomId });\n      }\n    });\n  };\n\n  return <JoinMeeting onJoinMeeting={onJoinMeeting} />;\n});\n\nexport default JoinMeetingPage;\n","/usr/src/app/src/pages/joinMeeting/components/joinMeeting.tsx",[],"/usr/src/app/src/pages/joinMeeting/graphql/joinMeeting.tsx",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":29,"column":3,"nodeType":"155","messageId":"156","endLine":29,"endColumn":14},{"ruleId":"153","severity":1,"message":"154","line":36,"column":5,"nodeType":"155","messageId":"156","endLine":36,"endColumn":16},{"ruleId":"153","severity":1,"message":"154","line":39,"column":5,"nodeType":"155","messageId":"156","endLine":39,"endColumn":16},{"ruleId":"153","severity":1,"message":"154","line":18,"column":3,"nodeType":"155","messageId":"156","endLine":18,"endColumn":14},{"ruleId":"153","severity":1,"message":"154","line":24,"column":3,"nodeType":"155","messageId":"156","endLine":24,"endColumn":14},{"ruleId":"153","severity":1,"message":"154","line":31,"column":3,"nodeType":"155","messageId":"156","endLine":31,"endColumn":14},{"ruleId":"153","severity":1,"message":"154","line":47,"column":7,"nodeType":"155","messageId":"156","endLine":47,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":48,"column":7,"nodeType":"155","messageId":"156","endLine":48,"endColumn":18},{"ruleId":"157","severity":1,"message":"158","line":128,"column":13,"nodeType":"159","endLine":128,"endColumn":60},{"ruleId":"157","severity":1,"message":"158","line":133,"column":13,"nodeType":"159","endLine":133,"endColumn":88},{"ruleId":"141","replacedBy":"160"},{"ruleId":"143","replacedBy":"161"},{"ruleId":"145","replacedBy":"162"},{"ruleId":"147","replacedBy":"163"},{"ruleId":"149","replacedBy":"164"},{"ruleId":"151","replacedBy":"165"},{"ruleId":"153","severity":1,"message":"154","line":13,"column":5,"nodeType":"155","messageId":"156","endLine":13,"endColumn":16},{"ruleId":"153","severity":1,"message":"154","line":20,"column":7,"nodeType":"155","messageId":"156","endLine":20,"endColumn":18},"lines-around-directive",["166"],"no-spaced-func",["167"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","jsx-a11y/anchor-is-valid","Anchor used as a button. Anchors are primarily expected to navigate. Use the button element instead. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["166"],["167"],[],[],[],[],"padding-line-between-statements","func-call-spacing"]